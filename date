/**10.14 (THE MYDATE CLASS) Design a class named MyDate. The class contains:

The data fields year, month, and day that represent a date. month is 0-based, i.e., 0 is for January.

A no-arg constructor that creates a MyDate object for the current date.

A constructor that constructs a MyDate object with a specified elapsed time since midnight, January 1, 1970, in milliseconds.

A constructor that constructs a MyDate object with the specified year, month, and day.

Three getter methods for the data fields year, month, and day, respectively.

A method named setDate(long elapsedTime) that sets a new date for the object using the elapsed time.

Draw the UML diagram for the class then implement the class. Write a test program that creates two 
MyDate objects (using new MyDate() and new MyDate(34355555133101L)) and displays their year, month, and day.

(HINT: The first two constructors will extract the year, month, and day from the elapsed time. For 
example, if the elapsed time is 561555550000 milliseconds, the year is 1987, the month is 9, and 
the day is 18. You may use the GregorianCalendar class discussed in Programming*/
import java.util.Calendar;  
import java.util.GregorianCalendar;
public class date {
	public static void main(String[] args) {

		Mydate test1 = new Mydate();
		Mydate test2 = new Mydate(34355555133101L);
        Mydate hint = new Mydate(561555550000L);

		System.out.println("Day: " + test1.getday() + " | Month (minus 1): " + test1.getmonth() + " | Year:" + test1.getyear());
      
		System.out.println("Day: " + test2.getday() + " | Month (minus 1): " + test2.getmonth() + " | Year:" + test2.getyear());
      
        System.out.println("Day: " + hint.getday() + " | Month (minus 1): " + hint.getmonth() + " | Year:" + hint.getyear());
	}
}
class Mydate {
//creating variables
    private int year;
	private int month;
	private int day;

  //making object and making default dates
 	Mydate() {
		GregorianCalendar cal = new GregorianCalendar();
		year = cal.get(GregorianCalendar.YEAR);
		month = cal.get(GregorianCalendar.MONTH);
		day = cal.get(GregorianCalendar.DAY_OF_MONTH);
	}

	//makes mydate object with inputted time
	Mydate(long elapsedTime) {
		setDate(elapsedTime);
	}

	
	Mydate(int year, int month, int day) {
		this.year = year;
		this.month = month;
		this.day = day;
	}

 	//returns year 
 	int getyear() {
		return year;
	}

	//returns month minus one and returns 0 if it goes below 1
	String getmonth() {
      String month_s = String.valueOf(month - 1);
      return (month-1 < 0 ? "0" : month_s);
      
    }

    //returns day
	String getday() {
		String day_s = String.valueOf(day);
		return day_s;
	}

	//sets all variables of date to new elapsed time
	void setDate(long elapsedTime) {
		GregorianCalendar cal = new GregorianCalendar();
		cal.setTimeInMillis(elapsedTime);
		year = cal.get(GregorianCalendar.YEAR);
		month = cal.get(GregorianCalendar.MONTH);
		day = cal.get(GregorianCalendar.DAY_OF_MONTH);
	} 
}

